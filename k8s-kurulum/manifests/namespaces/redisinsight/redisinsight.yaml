apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nfs-redisinsight
  namespace: redisinsight
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs-client
  volumeMode: Filesystem
---
# Source: redisinsight/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "test-prod-redisinsight-test-connection"
  namespace: redisinsight
  labels:
    helm.sh/chart: redisinsight-0.1.0
    app.kubernetes.io/name: redisinsight
    app.kubernetes.io/instance: test-prod-redisinsight
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['test-prod-redisinsight:80']
  restartPolicy: Never
---
# Source: redisinsight/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-prod-redisinsight
  namespace: redisinsight
  labels:
    helm.sh/chart: redisinsight-0.1.0
    app.kubernetes.io/name: redisinsight
    app.kubernetes.io/instance: test-prod-redisinsight
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: redisinsight/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-prod-redisinsight
  namespace: redisinsight
  labels:
    helm.sh/chart: redisinsight-0.1.0
    app.kubernetes.io/name: redisinsight
    app.kubernetes.io/instance: test-prod-redisinsight
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8001
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: redisinsight
    app.kubernetes.io/instance: test-prod-redisinsight
---
# Source: redisinsight/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-prod-redisinsight
  namespace: redisinsight
  labels:
    helm.sh/chart: redisinsight-0.1.0
    app.kubernetes.io/name: redisinsight
    app.kubernetes.io/instance: test-prod-redisinsight
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redisinsight
      app.kubernetes.io/instance: test-prod-redisinsight
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redisinsight
        app.kubernetes.io/instance: test-prod-redisinsight
        network.policy.entity.level: allnodes
    spec:
      serviceAccountName: test-prod-redisinsight
      securityContext:
        {}
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: pvc-nfs-redisinsight
      containers:
        - name: redisinsight
          securityContext:
            {}
          image: "redislabs/redisinsight:1.14.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8001
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /healthcheck/
          #     port: 8001
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          #   failureThreshold: 1
          resources:
            limits:
              cpu: 1
              memory: 4Gi
            requests:
              cpu: 20m
              memory: 512Mi
          volumeMounts:
            - name: db
              mountPath: /db
